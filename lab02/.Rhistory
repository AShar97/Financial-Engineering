source('~/Documents/6th Sem/MA-374 - Financial Engineering Lab/lab02/2.R')
source('~/Documents/6th Sem/MA-374 - Financial Engineering Lab/lab02/1.R')
source('~/Documents/6th Sem/MA-374 - Financial Engineering Lab/lab02/1.R')
source('~/Documents/6th Sem/MA-374 - Financial Engineering Lab/lab02/1.R')
source('~/Documents/6th Sem/MA-374 - Financial Engineering Lab/lab02/1.R')
source('~/Documents/6th Sem/MA-374 - Financial Engineering Lab/lab02/Untitled.R')
source('~/Documents/6th Sem/MA-374 - Financial Engineering Lab/lab02/Untitled.R')
source('~/Documents/6th Sem/MA-374 - Financial Engineering Lab/lab02/Untitled.R')
source('~/Documents/6th Sem/MA-374 - Financial Engineering Lab/lab02/Untitled.R')
source('~/Documents/6th Sem/MA-374 - Financial Engineering Lab/lab02/Untitled.R')
source('~/Documents/6th Sem/MA-374 - Financial Engineering Lab/lab02/Untitled.R')
source('~/Documents/6th Sem/MA-374 - Financial Engineering Lab/lab02/Untitled.R')
View(OptionValue)
View(AssetPrice)
View(AssetPrice)
setwd("6th Sem/MA-374 - Financial Engineering Lab/lab02")
source('~/Documents/6th Sem/MA-374 - Financial Engineering Lab/lab02/1.R')
source('~/Documents/6th Sem/MA-374 - Financial Engineering Lab/lab02/2.R')
source('~/Documents/6th Sem/MA-374 - Financial Engineering Lab/lab02/2.R')
##Part e.
M = seq(5, 15, by=1);
e1c_k95 <- 1:length(M); e1c_k100 <- 1:length(M); e1c_k105 <- 1:length(M);
e1p_k95 <- 1:length(M); e1p_k100 <- 1:length(M); e1p_k105 <- 1:length(M);
e2c_k95 <- 1:length(M); e2c_k100 <- 1:length(M); e2c_k105 <- 1:length(M);
e2p_k95 <- 1:length(M); e2p_k100 <- 1:length(M); e2p_k105 <- 1:length(M);
for (i in 1:length(M)) {
e1c_k95[i] <- (binopt( S0, 95, r, t, M[i], vol, 1 , 'a' )$OptionValue)[1,1];
e1p_k95[i] <- (binopt( S0, 95, r, t, M[i], vol, 0 , 'a' )$OptionValue)[1,1];
e2c_k95[i] <- (binopt( S0, 95, r, t, M[i], vol, 1 , 'b' )$OptionValue)[1,1];
e2p_k95[i] <- (binopt( S0, 95, r, t, M[i], vol, 0 , 'b' )$OptionValue)[1,1];
e1c_k100[i] <- (binopt( S0, 100, r, t, M[i], vol, 1 , 'a' )$OptionValue)[1,1];
e1p_k100[i] <- (binopt( S0, 100, r, t, M[i], vol, 0 , 'a' )$OptionValue)[1,1];
e2c_k100[i] <- (binopt( S0, 100, r, t, M[i], vol, 1 , 'b' )$OptionValue)[1,1];
e2p_k100[i] <- (binopt( S0, 100, r, t, M[i], vol, 0 , 'b' )$OptionValue)[1,1];
e1c_k105[i] <- (binopt( S0, 105, r, t, M[i], vol, 1 , 'a' )$OptionValue)[1,1];
e1p_k105[i] <- (binopt( S0, 105, r, t, M[i], vol, 0 , 'a' )$OptionValue)[1,1];
e2c_k105[i] <- (binopt( S0, 105, r, t, M[i], vol, 1 , 'b' )$OptionValue)[1,1];
e2p_k105[i] <- (binopt( S0, 105, r, t, M[i], vol, 0 , 'b' )$OptionValue)[1,1];
}
pdf("2e_k95.pdf");
par(mfrow=c(2,2));
plot(M,e1c_k95, main="Call option for Set1 with K=95", sub="M vs. Initial Price",
xlab="M", ylab="Initial Price");
plot(M,e1p_k95, main="Put option for Set1 with K=95", sub="M vs. Initial Price",
xlab="M", ylab="Initial Price");
plot(M,e2c_k95, main="Call option for Set2 with K=95", sub="M vs. Initial Price",
xlab="M", ylab="Initial Price");
plot(M,e2p_k95, main="Put option for Set2 with K=95", sub="M vs. Initial Price",
xlab="M", ylab="Initial Price");
dev.off();
pdf("2e_k100.pdf");
par(mfrow=c(2,2));
plot(M,e1c_k100, main="Call option for Set1 with K=100", sub="M vs. Initial Price",
xlab="M", ylab="Initial Price");
plot(M,e1p_k100, main="Put option for Set1 with K=100", sub="M vs. Initial Price",
xlab="M", ylab="Initial Price");
plot(M,e2c_k100, main="Call option for Set2 with K=100", sub="M vs. Initial Price",
xlab="M", ylab="Initial Price");
plot(M,e2p_k100, main="Put option for Set2 with K=100", sub="M vs. Initial Price",
xlab="M", ylab="Initial Price");
dev.off();
pdf("2e_k105.pdf");
source('~/Documents/6th Sem/MA-374 - Financial Engineering Lab/lab02/2.R')
rm(list = ls());
pos <- function(x){
ind = which(x < 0)
z = x
z[ind] <- 0  ## z now contains the x^+
return(z)
}
greater <- function(x, y){
ind = which(x < y)
z = x
z[ind] <- y[ind]  ## z now contains the max(x,y) iterative.
return(z)
}
binopt <- function( S0, K, r, t, M, vol, Flag, uFlag ){
dt = t/M;
time <- seq(0, t, by=dt);
if (uFlag == 'a'){
u = exp(vol*sqrt(dt));
d = exp(-vol*sqrt(dt));
} else if (uFlag == 'b'){
u = exp(vol*sqrt(dt) + (r-((vol^2)/2))*dt);
d = exp(-vol*sqrt(dt) + (r-((vol^2)/2))*dt);
}
#Continuous Compounding so "exp(r*dt)".
if ((d > exp(r*dt)) | (exp(r*dt) > u)){
stop('ArbitargePossible as "d < exp(r*dt) < u" not true.');
}
AssetPrice <- matrix(0, nrow = (2^M), ncol = (M+1));
OptionValue <- matrix(0, nrow = (2^M), ncol = (M+1));
MaxAsset <- matrix(0, nrow = (2^M), ncol = (M+1));
AssetPrice[1,1] = S0;
for (i in 2:(M+1)){
AssetPrice[seq(1, 2^(i-1), 2), i] <- AssetPrice[(1:2^(i-2)), (i-1)]*u;
AssetPrice[seq(2, 2^(i-1), 2), i] <- AssetPrice[(1:2^(i-2)), (i-1)]*d;
MaxAsset[seq(1, 2^(i-1), 2), i] <- greater(AssetPrice[seq(1, 2^(i-1), 2), i], MaxAsset[(1:2^(i-2)), i]);
MaxAsset[seq(2, 2^(i-1), 2), i] <- greater(AssetPrice[seq(2, 2^(i-1), 2), i], MaxAsset[(1:2^(i-2)), i])
}
#Flag = 1 for a call option, or Flag = 0 for a put option.
if (Flag == 1){
OptionValue[, M+1] <- pos(MaxAsset[, M+1] - K);
}
else if (Flag == 0){
OptionValue[, M+1] <- pos(K - MaxAsset[, M+1]);
}
#Continuous Compounding so "exp(r*dt)".
p_ = (exp(r*dt) - d)/(u-d);
q_ = (u - exp(r*dt))/(u-d);
for (i in seq(M, 1, by=-1)){
#for European Options:
#OptionValue[1:i, i] <- (p_*OptionValue[1:i, i+1] + q_*OptionValue[2:(i+1), i+1])/exp(r*dt);
#for American Options:
#if (Flag == 1){
#  OptionValue[1:i, i] <- greater(pos(AssetPrice[1:i, i] - K), (p_*OptionValue[1:i, i+1] + q_*OptionValue[2:(i+1), i+1])/exp(r*dt));
#}
#else if (Flag == 0){
#  OptionValue[1:i, i] <- greater(pos(K - AssetPrice[1:i, i]), (p_*OptionValue[1:i, i+1] + q_*OptionValue[2:(i+1), i+1])/exp(r*dt));
#}
#for Lookback Options:
OptionValue[1:2^(i-1), i] <- (p_*OptionValue[seq(1, 2^i, 2), i+1] + q_*OptionValue[seq(2, 2^i, 2), i+1])/exp(r*dt);
}
result <- list("AssetPrice" = AssetPrice, "OptionValue" = OptionValue, "time" = time);
return(result);
}
S0 = 100;
K = 100;
t = 1;
M = 10;
r = 0.08;
vol = 0.2;
ans = binopt( S0, K, r, t, M, vol, 1 , 'a' )
View(ans)
View(ans)
ans[["OptionValue"]]
ans = binopt( S0, K, r, t, M, vol, 1 , 'a' )$AssetPrice
View(ans)
View(ans)
ans = binopt( S0, K, r, t, M, vol, 1 , 'a' )
ans = binopt( S0, K, r, t, M, vol, 1 , 'a' )
View(ans)
ans[["AssetPrice"]]
source('~/Documents/6th Sem/MA-374 - Financial Engineering Lab/lab02/2.R')
ans = binopt( S0, K, r, t, M, vol, 1 , 'a' )$AssetPrice
source('~/Documents/6th Sem/MA-374 - Financial Engineering Lab/lab02/2.R')
source('~/Documents/6th Sem/MA-374 - Financial Engineering Lab/lab02/2.R')
ans = binopt( S0, K, r, t, M, vol, 1 , 'a' )$AssetPrice
q()
source('~/Documents/6th Sem/MA-374 - Financial Engineering Lab/lab02/2.R')
source('~/Documents/6th Sem/MA-374 - Financial Engineering Lab/lab02/2.R')
rm(list = ls());
pos <- function(x){
ind = which(x < 0)
z = x
z[ind] <- 0  ## z now contains the x^+
return(z)
}
greater <- function(x, y){
ind = which(x < y)
z = x
z[ind] <- y[ind]  ## z now contains the max(x,y) iterative.
return(z)
}
binopt <- function( S0, K, r, t, M, vol, Flag, uFlag ){
dt = t/M;
time <- seq(0, t, by=dt);
if (uFlag == 'a'){
u = exp(vol*sqrt(dt));
d = exp(-vol*sqrt(dt));
} else if (uFlag == 'b'){
u = exp(vol*sqrt(dt) + (r-((vol^2)/2))*dt);
d = exp(-vol*sqrt(dt) + (r-((vol^2)/2))*dt);
}
#Continuous Compounding so "exp(r*dt)".
if ((d > exp(r*dt)) | (exp(r*dt) > u)){
stop('ArbitargePossible as "d < exp(r*dt) < u" not true.');
}
AssetPrice <- matrix(0, nrow = (2^M), ncol = (M+1));
OptionValue <- matrix(0, nrow = (2^M), ncol = (M+1));
MaxAsset <- matrix(0, nrow = (2^M), ncol = (M+1));
AssetPrice[1,1] = S0;
for (i in 2:(M+1)){
AssetPrice[seq(1, 2^(i-1), 2), i] <- AssetPrice[(1:2^(i-2)), (i-1)]*u;
AssetPrice[seq(2, 2^(i-1), 2), i] <- AssetPrice[(1:2^(i-2)), (i-1)]*d;
MaxAsset[seq(1, 2^(i-1), 2), i] <- greater(AssetPrice[seq(1, 2^(i-1), 2), i], MaxAsset[(1:2^(i-2)), i]);
MaxAsset[seq(2, 2^(i-1), 2), i] <- greater(AssetPrice[seq(2, 2^(i-1), 2), i], MaxAsset[(1:2^(i-2)), i])
}
#Flag = 1 for a call option, or Flag = 0 for a put option.
if (Flag == 1){
OptionValue[, M+1] <- pos(MaxAsset[, M+1] - K);
}
else if (Flag == 0){
OptionValue[, M+1] <- pos(K - MaxAsset[, M+1]);
}
#Continuous Compounding so "exp(r*dt)".
p_ = (exp(r*dt) - d)/(u-d);
q_ = (u - exp(r*dt))/(u-d);
for (i in seq(M, 1, by=-1)){
#for European Options:
#OptionValue[1:i, i] <- (p_*OptionValue[1:i, i+1] + q_*OptionValue[2:(i+1), i+1])/exp(r*dt);
#for American Options:
#if (Flag == 1){
#  OptionValue[1:i, i] <- greater(pos(AssetPrice[1:i, i] - K), (p_*OptionValue[1:i, i+1] + q_*OptionValue[2:(i+1), i+1])/exp(r*dt));
#}
#else if (Flag == 0){
#  OptionValue[1:i, i] <- greater(pos(K - AssetPrice[1:i, i]), (p_*OptionValue[1:i, i+1] + q_*OptionValue[2:(i+1), i+1])/exp(r*dt));
#}
#for Lookback Options:
OptionValue[1:2^(i-1), i] <- (p_*OptionValue[seq(1, 2^i, 2), i+1] + q_*OptionValue[seq(2, 2^i, 2), i+1])/exp(r*dt);
}
result <- list("AssetPrice" = AssetPrice, "OptionValue" = OptionValue, "time" = time);
return(result);
}
S0 = 100;
K = 100;
t = 1;
M = 10;
r = 0.08;
vol = 0.2;
cat("Set 1.\n");
ans = binopt( S0, K, r, t, M, vol, 1 , 'a' )$AssetPrice
View(ans)
View(ans)
dt = t/M;
u = exp(vol*sqrt(dt));
source('~/Documents/6th Sem/MA-374 - Financial Engineering Lab/lab02/2.R')
source('~/Documents/6th Sem/MA-374 - Financial Engineering Lab/lab02/2.R')
source('~/Documents/6th Sem/MA-374 - Financial Engineering Lab/lab02/2.R')
